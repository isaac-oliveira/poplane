# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane



fastlane_require 'dotenv'
default_platform(:android)

require "./popcode.rb"

before_all do |lane, options|
  @changelog = changelog_from_git_commits(
    commits_count: 10,
    pretty: '- %s',
    tag_match_pattern: nil,
    match_lightweight_tag: false,
    include_merges: false
  )
end

platform :android do
  desc "Envia uma build para testar o Fastlane"
  lane :test do
      increment_version_code(
          gradle_file_path: "./app/build.gradle",
      )
      gradle(task: "clean")
      gradle(task: Popcode::Task::Debug)

      firebase_app_distribution(
          app: Popcode::Firebase::AppIdDebug,
          groups: "<groups>", # Você precisa alterar esse campo
          release_notes: @changelog,
          firebase_cli_path: "/usr/local/bin/firebase"
      )
  end

  desc "Envia uma build de Desenvolvimento para o Firebase"
  lane :development do
      increment_version_code(
          gradle_file_path: "./app/build.gradle",
      )
      gradle(task: "clean")
      gradle(task: Popcode::Task::Staging)

      sh(
        step_name: "Copiando binário para o ofuscador",
        command: "scp ../app/build/outputs/apk/stagingrelease/app-stagingrelease.apk <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY APK>/staging/app.apk" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando arquivo de configuração do dexprotector para o ofuscador",
        command: "scp ../app/dexprotector-config-apk.xml <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY XML>/staging" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Executando o script de ofuscamento",
        command: "ssh <USER YOUR SERVER>@<YOUR SERVER ADRESS> 'bash -s' < obfuscateBinary.sh staging apk" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando binário ofuscado para a máquina local",
        command: "scp <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO PROTECTED APK>/staging/app.protected.apk ../app/build/outputs/apk/stagingrelease" # Você precisa alterar esse comando
      )

      firebase_app_distribution(
          app: Popcode::Firebase::AppIdStaging,
          groups: "<groups>", # Você precisa alterar esse campo
          release_notes: @changelog,
          firebase_cli_path: "/usr/local/bin/firebase",
          android_artifact_path: "../app/build/outputs/apk/stagingrelease/app.protected.apk"
      )
  end

  desc "Envia uma build de Homologação para o Firebase"
  lane :staging do
      increment_version_code(
          gradle_file_path: "./app/build.gradle",
      )
      gradle(task: "clean")
      gradle(task: Popcode::Task::Staging)

      sh(
        step_name: "Copiando binário para o ofuscador",
        command: "scp ../app/build/outputs/apk/stagingrelease/app-stagingrelease.apk <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY APK>/staging/app.apk" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando arquivo de configuração do dexprotector para o ofuscador",
        command: "scp ../app/dexprotector-config-apk.xml <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY XML>/staging" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Executando o script de ofuscamento",
        command: "ssh <USER YOUR SERVER>@<YOUR SERVER ADRESS> 'bash -s' < obfuscateBinary.sh staging apk" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando binário ofuscado para a máquina local",
        command: "scp <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO PROTECTED APK>/staging/app.protected.apk ../app/build/outputs/apk/stagingrelease" # Você precisa alterar esse comando
      )

      firebase_app_distribution(
          app: Popcode::Firebase::AppIdStaging,
          groups: "<groups>", # Você precisa alterar esse campo
          release_notes: @changelog,
          firebase_cli_path: "/usr/local/bin/firebase",
          android_artifact_path: "../app/build/outputs/apk/stagingrelease/app.protected.apk"
  end

  desc "Envia uma build de Produção para o Firebase"
  lane :release do |options|
      isAab = options[:isAab] != nil ? options[:isAab] : true
      increment_version_code(
          gradle_file_path: "./app/build.gradle",
      )
      gradle(task: "clean")
      gradle(task: isAab ? Popcode::Task::AabProduction : Popcode::Task::ApkProduction)

      if isAab
        sh(
          step_name: "Copiando binário para o ofuscador",
          command: "scp ../app/build/outputs/bundle/release/app-release.aab <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY AAB>/release/app.aab" # Você precisa alterar esse comando
        )
        sh(
          step_name: "Copiando arquivo de configuração do dexprotector para o ofuscador",
          command: "scp ../app/dexprotector-config-aab.xml <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY XML>/release" # Você precisa alterar esse comando
        )
        sh(
          step_name: "Executando o script de ofuscamento",
          command: "ssh <USER YOUR SERVER>@<YOUR SERVER ADRESS> 'bash -s' < obfuscateBinary.sh release aab" # Você precisa alterar esse comando
        )
        sh(
          step_name: "Copiando binário ofuscado para a máquina local",
          command: "scp <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY PROTECTED AAB>/release/app.protected.aab ../app/build/outputs/bundle/release" # Você precisa alterar esse comando
        )
      else
        sh(
          step_name: "Copiando binário para o ofuscador",
          command: "scp ../app/build/outputs/apk/release/app-release.apk <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY APK>/release/app.apk" # Você precisa alterar esse comando
        )
        sh(
          step_name: "Copiando arquivo de configuração do dexprotector para o ofuscador",
          command: "scp ../app/dexprotector-config-apk.xml <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY XML>/release" # Você precisa alterar esse comando
        )
        sh(
          step_name: "Executando o script de ofuscamento",
          command: "ssh <USER YOUR SERVER>@<YOUR SERVER ADRESS> 'bash -s' < obfuscateBinary.sh release apk" # Você precisa alterar esse comando
        )
        sh(
          step_name: "Copiando binário ofuscado para a máquina local",
          command: "scp <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY PROTECTED APK>/release/app.protected.apk ../app/build/outputs/apk/release" # Você precisa alterar esse comando
        )
      end

      firebase_app_distribution(
          app: Popcode::Firebase::AppIdProduction,
          groups: "<groups>", # Você precisa alterar esse campo
          release_notes: @changelog,
          firebase_cli_path: "/usr/local/bin/firebase",
          android_artifact_path: isAab ? "../app/build/outputs/bundle/release/app.protected.aab" : "../app/build/outputs/apk/release/app.protected.apk"
      )
  end

  desc "Envia uma nova versão para App Store"
  lane :store do
      increment_version_code(
          gradle_file_path: "./app/build.gradle",
      )
      gradle(task: "clean")
      gradle(task: Popcode::Task::AabProduction)

      sh(
        step_name: "Copiando binário para o ofuscador",
        command: "scp ../app/build/outputs/bundle/release/app-release.aab <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY AAB>/store/app.aab" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando arquivo de configuração do dexprotector para o ofuscador",
        command: "scp ../app/dexprotector-config-playstore.xml <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY XML>/store" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Executando o script de ofuscamento",
        command: "ssh <USER YOUR SERVER>@<YOUR SERVER ADRESS> 'bash -s' < obfuscateBinary.sh store aab" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando binário ofuscado para a máquina local",
        command: "scp <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY PROTECTED AAB>/store/app.protected.aab ../app/build/outputs/bundle/release" # Você precisa alterar esse comando
      )
      sh(
        step_name: "Copiando o log de ofuscamento para a máquina local",
        command: "scp <USER YOUR SERVER>@<YOUR SERVER ADRESS>:<PATH TO COPY LOG DEXPROTECTOR>/store/app.protected.aab.txt ../app/build/outputs/bundle/release" # Você precisa alterar esse comando
      )

      upload_to_play_store(
        track: '<playStoreTack>' # Você precisa alterar esse campo
        aab: './app/build/outputs/bundle/release/app.protected.aab'
      ) 
  end
end
